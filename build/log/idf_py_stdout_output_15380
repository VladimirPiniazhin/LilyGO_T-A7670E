[1/9] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\Metropolia\IoT-project\test\build\bootloader\esp-idf\esptool_py && c:\Users\vdis0\.espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Users/vdis0/esp/v5.4/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/Metropolia/IoT-project/test/build/bootloader/bootloader.bin"
Bootloader binary size 0x6560 bytes. 0xaa0 bytes (9%) free.
[2/9] No install step for 'bootloader'
[3/9] Completed 'bootloader'
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/9] Linking C static library esp-idf\main\libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable sensor_project.elf
[8/9] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/Metropolia/IoT-project/test/build/sensor_project.bin
[9/9] C:\WINDOWS\system32\cmd.exe /C "cd /D D:\Metropolia\IoT-project\test\build\esp-idf\esptool_py && c:\Users\vdis0\.espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Users/vdis0/esp/v5.4/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/Metropolia/IoT-project/test/build/partition_table/partition-table.bin D:/Metropolia/IoT-project/test/build/sensor_project.bin"
sensor_project.bin binary size 0x6c230 bytes. Smallest app partition is 0x100000 bytes. 0x93dd0 bytes (58%) free.
