Initialization

Since the ESP-NETIF component uses system events, the typical network startup code lookslike this (note that error handling is omitted for clarity, see
ethernet/basic/main/ethernet_example_main.c
for complete startup code):

// 1) Initialize the TCP/IP stack and the event loop
esp_netif_init();
esp_event_loop_create_default();

// 2) Create the network interface handle
esp_netif = esp_netif_new(&config);

// 3) Create the network interface driver (e.g., Ethernet) and it's network layer glue
// and register the ESP-NETIF event (e.g., to bring the interface up upon link-up event)

esp_netif_glue_t glue = driver_glue(driver);

// 4) Attach the driver's glue layer to the network interface handle
esp_netif_attach(esp_netif,glue);

// 5) Register user-side event handlers
esp_event_handler_register
(DRIVER_EVENT,...);

// to observe driver states, e.g., link-up
esp_event_handler_register(IP_EVENT,...);

// to observe ESP-NETIF states, e.g., get an IP


These steps must be performed in the exact order shown above, as the network interfacedrivers use the default event loop when registering system events.

- The default event loop needs to be created beforeinitializing an interface driver,as the driver typically needs to register system event handlers.
- Registering application event handlers must occur after calling esp_netif_attach(), because event handlers are called in the order they were registered. To ensure thatsystem handlers are called fi rst, you should register application handlers afterward.

Steps 2), 3) and 4) are quite complex for most common use-cases, so ESP-NETIF provides some pre-confi gured interfaces and convenience functions that create the mostcommon network interfaces in their most common configurations.

Each network interface needs to be initialized separately, so if you would like to usemultiple interfaces, you would have to run steps
2) to 5) for every interface. Set 1) should be performed only once

Creating and confi guring the interface and attaching the network interface driver to it (steps 2), 3) and 4)) is described in Common Network Interfaces.

Using the ESP-NETIF event handlers (step 5) ) is described in IP Events.